{
  "helpAndBugsMenuItem": "Help",
  "ApplyTo": "Apply to",
  "Success": "Success",
  "ConnectionString": "Connection string",
  "NodeConnectionStringHelp": "The connection string follows this format: pubkey@ip:port",
  "TxId": "Transaction ID",
  "Targets": "Targets",
  "Destinations": "Destinations",
  "Sources": "Sources",
  "Avoid": "Avoid",
  "focus": "Focus",
  "SatPerVbyte": "Sat/vbyte",
  "Private": "Private",
  "ChannelSize": "Channel Size",
  "AdvancedActions": "Advanced Actions",
  "AdvancedOptions": "Advanced Options",
  "PushAmount": "Push Amount",
  "PushAmountHelpText": "The amount of funds to push to the remote peer. NB! This is amount is given to remote peer immediately after the channel is opened.",
  "socketCantAcceptMultipleInputs": "does not accept multiple links.",
  "sign": "Sign",
  "verify": "Verify",
  "message": "Message",
  "signature": "Signature",
  "validSignature": "Valid Signature for public key:",
  "invalidSignature": "Invalid Signature",
  "missingSignMessage": "You have to provide a message to sign",
  "missingMessage": "You can't verify a signature without providing the message it signed",
  "missingSignature": "You can't verify a signature without providing it.",
  "active": "active",
  "inactive": "inactive",
  "submit": "Submit",
  "inspect": "Inspect",
  "inspectChannel": "Inspect Channel",
  "seconds": "Seconds",
  "minutes": "Minutes",
  "hours": "Hours",
  "days": "Days",
  "login": "Login",
  "saturday": "Saturday",
  "sunday": "Sunday",
  "monday": "Monday",
  "Every": "Every",
  "TriggerEvery": "Trigger Every",
  "cron": "Cron",
  "intervals": "Intervals",
  "frequency": "Frequency",
  "language": "Language",
  "defaultDateRange": "Default date range",
  "preferredTimezone": "Preferred timezone",
  "weekStartsOn": "Week starts on",
  "save": "Save",
  "addNode": "Add Node",
  "addTag": "Add Tag",
  "removeTag": "Remove Tag",
  "tag": "Tag",
  "channel": "Channel",
  "node": "Node",
  "add": "Add",
  "addFilter": "Add Filter",
  "addFilterGroup": "Add Group",
  "deleteTag": "Delete Tag",
  "activate": "Activate",
  "deactivate": "Deactivate",
  "unknown": "Unknown",
  "p2wpkh": "Segwit",
  "addView": "Add View",
  "views": "Views",
  "draftViews": "Drafts",
  "draft": "Draft",
  "p2wkh": "Nested Segwit",
  "np2wkh": "Hybrid Nested Segwit",
  "p2tr": "Taproot",
  "addressType": "Address type",
  "yourNode": "Your Node",
  "yourChannel": "Your Channel",
  "transactions": "Transactions",
  "onChainTx": "On-Chain",
  "next": "Next",
  "back": "Back",
  "edit": "Edit",
  "delete": "Delete",
  "confirm": "Confirm",
  "archive": "Archive",
  "newAddress": "New Address",
  "openChannel": "Open Channel",
  "style": "Style",
  "name": "Name",
  "drain": "Drain",
  "saving": "Saving...",
  "red": "red",
  "yellow": "yellow",
  "columns": "Columns",
  "search": "Search",
  "filter": "Filter",
  "sort": "Sort",
  "group": "Group",
  "channels": "Channels",
  "openChannels": "Open",
  "closedChannels": "Closed",
  "pendingChannels": "Pending",
  "channelPolicy": "Channel policy",
  "feeRate": "Fee rate",
  "baseFee": "Base fee",
  "minHTLCAmount": "Min HTLC Amount (Sat)",
  "maxHTLCAmount": "Max HTLC Amount (Sat)",
  "MinimumConfirmations": "Minimum Confirmations",
  "ChannelCloseAddress": "Channel Close Address",
  "HTLCMinSat": "HTLC Min Sat",
  "analyse": "Analyse",
  "tags": "Tags",
  "manage": "Manage",
  "newPayment": "New Payment",
  "payments": "Payments",
  "invoices": "Invoices",
  "onChain": "On-Chain",
  "noCategory": "No Category",
  "tagNode": "Tag Node",
  "tagChannel": "Tag Channel",
  "import": "Import",
  "ImportFailedPayments": "Import failed payments",
  "tagsModal": {
    "addConfirmedMessage": "tag and target created",
    "create": "Create",
    "update": "Update",
    "createTag": "Create Tag",
    "updateTag": "Update Tag",
    "customTag": "Custom Tag",
    "color": "Tag Color",
    "category": "Category",
    "target": "Add Target",
    "newTag": "New Tag",
    "noChannelsSelected": "No channels selected",
    "noNodesSelected": "No nodes selected",
    "tagColors": {
      "error": "Red",
      "warning": "Yellow",
      "success": "Green",
      "primary": "Blue",
      "accent1": "Purple",
      "accent2": "Teal",
      "accent3": "Crimson"
    },
    "tagCategories": {
      "sink": "Sink",
      "source": "Source",
      "balanced": "Balanced"
    }
  },
  "importFailedPayments": "When this is enabled Torq will import failed payments. (Please be cautious with this as this could cause performance problems for LND. This is not advised for nodes with aggressive rebalancing and/or lightweight hardware.)",
  "advancedSettings": "Advanced import settings",
  "implementation": "Implementation",
  "nodeName": "Node Name",
  "grpcAddress": "GRPC Address (IP or Tor)",
  "tlsCertificate": "TLS Certificate",
  "macaroon": "Macaroon",
  "summary": "Summary",
  "forwards": "Forwards",
  "transact": "Transact",
  "settings": "Settings",
  "giveFeedback": "Sure! I'd love to help!",
  "dontGiveFeedback": "No, Sorry...",
  "developerFeedback": "Please help us improve Torq",
  "developerFeedbackDetails": "By allowing us to store events about interaction with the interface you help us improve Torq. We will not store information about your channels, transactions, node or any other sensitive information. We will only store information about your interaction with the interface.",
  "logout": "Logout",
  "retry": "Retry",
  "bootstrapping": "Bootstrapping",
  "workflow": "Workflow",
  "workflows": "Workflows",
  "nodes": "Nodes",
  "stage": "Stage",
  "StageTrigger": "Stage Trigger",
  "stages": "Stages",
  "deploy": "Deploy",
  "saveDraft": "Save Draft",
  "newWorkflow": "New Workflow",
  "version": "Versions",
  "automation": "Automation",
  "triggers": "Triggers",
  "trigger": "Trigger",
  "dataSources": "Data Sources",
  "triggering": "Triggering",
  "all": "All",
  "both": "Both",
  "actions": "Actions",
  "MainNet": "MainNet",
  "TestNet": "TestNet",
  "RegTest": "RegTest",
  "SigNet": "SigNet",
  "SimNet": "SimNet",
  "note": "Note",
  "inputs": "Inputs",
  "deleteStageConfirm": "Are you sure you want to delete this stage?",
  "maximumCostSat": "Maximum cost (sat)",
  "maximumCostMilliMsat": "Maximum cost (ppm)",
  "maximumConcurrency": "Maximum concurrency",
  "amountSat": "Amount (sat)",
  "close": "Close",
  "update": "Update",
  "MessageVerification": "Sign & Verify",
  "stageTriggerDetails": {
    "stageTriggerDescription": "This stage will be triggered when the previous stage has completed.",
    "stageTriggerDescription2": "All the information from the previous stage will be passed on to this stage trigger. For example Channel Policy Configurations."
  },
  "tableLayout": {
    "tableOptions": "Table options"
  },
  "workflowNodes": {
    "openChannelTrigger": "Channel Opens",
    "channelOpenTriggerDetails": "This trigger will be triggered when a channel is opened.",
    "closeChannelTrigger": "Channel Closes",
    "channelCloseTriggerDetails": "This trigger will be triggered when a channel is closed.",
    "channelBalanceTrigger": "Channel Balance Changes",
    "balanceTriggerNodeDescription": "Triggers the workflow when the balance of a channel changes.",
    "intervalTrigger": "Interval Trigger",
    "cronTrigger": "Cron Trigger",
    "channelFilter": "Channel Filter",
    "channelPolicyAutoRun": "Channel Policy",
    "channelPolicyConfigurator": "Channel Policy Configuration",
    "channelPolicyRun": "Channel Policy Run",
    "channelPolicyDescription": "Torq limits fee changes to 2 times per 5 minutes to prevent the fee from changing too rapidly.",
    "rebalanceAutoRun": "Rebalance",
    "rebalanceConfigurator": "Rebalance Configuration",
    "rebalanceRun": "Rebalance Run",
    "tag": "Tag",
    "addTag": "Add Tags",
    "removeTag": "Remove Tags",
    "targetChannel": "Target Channels",
    "targetNode": "Target Nodes",
    "run": "Run Workflow",
    "torqChannels": "Torq Channel(s)"
  },
  "workflowDetails": {
    "cantAddTriggerNodeToStages": "Trigger nodes can only be added to the first stage.",
    "confirmWorkflowActivate": "Are you sure you want to activate this workflow?",
    "confirmWorkflowDeactivate": "Are you sure you want to deactivate this workflow?",
    "cantDropActionOnDriggerContainer": "You can only add triggers to the trigger container."
  },
  "updateChannelPolicy": {
    "title": "Update Channel Policy",
    "back": "Back",
    "newUpdate": "New",
    "feeBase": "Base Fee",
    "feeRateMilliMsat": "Fee Rate",
    "timeLockDelta": "Time Lock Delta",
    "minHtlc": "Min HTLC amount",
    "maxHtlc": "Max HTLC amount",
    "update": "Update",
    "confirmedMessage": "Channel policy updated",
    "maxHtlclaceholder": "Leave empty for no limit",
    "minHtlcPlaceholder": "Leave empty for no limit"
  },
  "openCloseChannel": {
    "GoToMempool": "Inspect on mempool",
    "openNewChannel": "Open another",
    "closeNewChannel": "Close another",
    "confirm": "Confirm",
    "closeChannel": "Close Channel",
    "error": "Error",
    "note": "Note",
    "confirmationOpenning": "The channel open has been published but still need time to be confirmed on-chain.",
    "confirmationClosing": "The channel close has been successfully published to the network but the funds in the channel still need to be confirmed through an on-chain transaction."
  },
  "toast": {
    "settingsSaved": "Settings saved",
    "tagAdded": "Tag added",
    "tagSaved": "Tag saved",
    "cannotBeUndone": "This operation cannot be undone, type delete to confirm.",
    "cannotModifyWorkflowActive": "Workflow is currently 'Active', 'Deactivate' workflow to make changes."
  },
  "header": {
    "newInvoice": "New Invoice",
    "newPayment": "New Payment",
    "newAddress": "New Address",
    "DateTimeSettings": "Date & time settings",
    "nodes": "Nodes",
    "tags": "Tags",
    "peerTag": "Peer tag",
    "channelTag": "Channel tag",
    "pingNoteHeader": "Monitoring",
    "pingSystem": "All Ping Systems Require a macaroon that can sign messages. Please make sure the certificates on your system are up-to-date.",
    "ambossPingSystem": "When Amboss ping is enabled Torq sending uptime pings to Amboss.",
    "vectorPingSystem": "Vector sends the output from `lncli getinfo` to vector.ln.capital. This allow you to see if your node is up and if the chain and network graphs is up to date.",
    "typeDeleteHere": "Type delete here"
  },
  "newInvoice": {
    "title": "New Invoice",
    "details": "Details",
    "invoice": "Invoice",
    "fallbackAddress": "Fallback address",
    "expiry": "Expiry",
    "amount": "Amount",
    "description": "Description",
    "descriptionPlaceholder": "Description (optional)",
    "save": "Save",
    "cancel": "Cancel",
    "toast": {
      "invoiceSaved": "Invoice saved"
    }
  },
  "info": {
    "peerTag": "Tag assigned to the peer.\nIncluding all it&apos;s current and future channels.",
    "channelTag": "Tag assigned to this channel.\nOnly on this channel.\nNot to other current or future channels from the same peer."
  },
  "modal": {
    "title": {
      "areYouSure": "Are you sure?",
      "addTag": "Add tag"
    }
  },
  "channelPage": {
    "expenses": {
      "heading": "Expenses",
      "rebalancing": "Rebalancing",
      "openAndClose": "Open & Close",
      "total": "Total"
    },
    "profit": {
      "heading": "Profit",
      "total": "Total",
      "grossProfitMargin": "Gross Profit Margin",
      "turnover": "Turnover"
    },
    "policyDetails": {
      "heading": "Policy Details (now)",
      "outbound": "Outbound",
      "inbound": "Inbound",
      "feeRate": "Fee Rate (PPM)",
      "baseFee": "Base Fee Msat",
      "timeLockDelta": "Time Lock Delta",
      "minimumHTLC": "Minimum HTLC",
      "maximumHTLC": "Maximum HTLC"
    },
    "chart": {
      "amount": "Amount",
      "revenue": "Revenue",
      "count": "Count"
    },
    "amount": {
      "header": "Amount",
      "capacity": "Capacity",
      "outbound": "Outbound",
      "inbound": "Inbound",
      "total": "Total",
      "turnover": "Turnover",
      "balanceScore": "Balance Score"
    },
    "revenue": {
      "header": "Revenue",
      "outbound": "Outbound",
      "inbound": "Inbound",
      "total": "Total",
      "averageFeeOut": "Average Fee Out",
      "averageFeeIn": "Average Fee In",
      "averageFee": "Average Fee",
      "forwardingFees": "Forwarding Fees",
      "channelLeases": "Channel Leases"
    },
    "transactionCount": {
      "header": "Transaction Count",
      "outbound": "Outbound",
      "inbound": "Inbound",
      "total": "Total",
      "balanceScore": "Balance Score (Nb. Tx)"
    },
    "summaryChart": {
      "amount": "Amount"
    },
    "chartSetting": {
      "toggleAll": "Toggle All"
    },
    "legendsContainer": {
      "sources": "Sources",
      "outbound": "Outbound",
      "inbound": "Inbound",
      "destinations": "Destinations"
    }
  },
  "errors": {
    "missingField": ":field: is required",
    "LNDConnect": "Unable to connect to LND Node. Please check connection details."
  }
}
